GPUS : '0' # indices of gpus available on servers. CPU mode is not available, only GPU!
PRINT_FREQ : 50 # frequency of printing statistics or any other stuff
OUTPUT_DIR : '/home/facades/projects/buildings_segmentation_detection/output/week14'

YOUR_TOKEN : '3aacbf1f972d9cc0c1a8f2517f0d8e306c91ac8ffe7acad3'  # your token of the web platform
YOUR_DATASET_ID : '61a783dbf64bafa3d864c6b8'  # the id of your dataset on the web platform

SEGMENTS_TRANSFER:
  status : 0
  segments_info_path : '/data/facades/dataset/dataset_complete/dataset/data_basel_images_pc/segments_info.csv' #help="csv file to show the relation between segments and streams"
  streams_dir : '/data/facades/dataset/build_seg_annotation1' #help="orginal building images are grouped by streams"
  segment_image_path : '/data/facades/dataset/annotated_data/basel_annotation1' #"Destination: copy to path only select the direction 1 and 4 from the panorama camera and grouped by segments"
  id_segments : '14051, 14052, 14053, 14054, 14055, 14056, 14057, 14058, 14064, 14065, 14066, 14067, 14068, 14069, 14070, 14071, 14072, 16835, 16836, 16837, 16838, 16839, 16849, 16850, 16851, 16852, 16853, 16854, 16855, 16856, 16857, 16858, 16872, 16873, 16875, 16876, 16877, 16878, 16879, 16880, 16881, 16882, 16883, 16884, 16885, 16888, 16889, 16890, 16948, 16949, 19416' #help="segments' id for testing(delimited list input)"

TRAINING:
  status : 0
  DATASET_DIR : '/home/facades/projects/buildings_segmentation_detection/code/data' #Where the data for training lies
  TARGET_PATH : '/home/facades/projects/buildings_segmentation_detection/output/week14/building_basel_annotation1/train' # Where to we save outputs
  CATALOG : # Training folders selected, see how catalogs works
    - "building_train"
    - "building_basel_annotation1"

VALIDATION:
  status : 0
  DATASET_DIR : '/home/facades/projects/buildings_segmentation_detection/code/data/val' #Where the data for validation lies
  TARGET_PATH : '/home/facades/projects/buildings_segmentation_detection/output/week14/building_basel_annotation1/val' # Where to we save outputs
  CATALOG : # Validation folders selected, see how catalogs works
    - "building_val"
  SCORE_THRESH_TEST : 0.90 
  WEIGHTS : '/home/facades/projects/buildings_segmentation_detection/output/week14/building_basel_annotation1/train/model_final.pth'
  #For Train+val in one go use the output dir where the weights will located after training

INFERENCE:
  status : 0
  STRUCTURE : 'folder' #How to read the dataset. For now: full or folder (through folders and directly thrg items resp)
  DATASET_PATH: '/home/facades/projects/buildings_segmentation_detection/code/data/vTestJson'
  TARGET_PATH : '/home/facades/projects/buildings_segmentation_detection/output/inference_jsonTESTS/'
  SCORE_THRESH_TEST : 0.90
  WEIGHTS : '/home/facades/projects/buildings_segmentation_detection/output/annotation1Plus/model_final.pth' #For Train+inf in one go use the output dir where the weights will located after training

ACTIVE_LEARNING:
  status : 1
  DATASET_ROOT : '/data/facades/dataset/dataset_complete/dataset/data_basel_images_pc/basel_dataset/Daten_segments1' #For Full dataset
  DATASET_PATH: '/home/facades/projects/buildings_segmentation_detection/data/AL_TEST' # Images to read For annotations
  TARGET_PATH : '/home/facades/projects/buildings_segmentation_detection/data/AL_TEST' #For outputs, transfer, annotations
  SCORE_THRESH_TEST : 0.90
  WEIGHTS : '/home/facades/projects/buildings_segmentation_detection/output/week14/active-learning-loop-1/model_final.pth' #For Train+inf in one go use the output dir where the weights will located after training
  rdp_epsilon: 20
  SAMPLER:
    al_loop: 'active-learning-loop-2' #name of tag in lightly
    n_samples: 100
    method: 'CORAL'
# If you want to train, validate.. and active learning in one go, weights, target_path and dataset_path must match

FLOOR_DETECTION:
  status : 0
  data_path: '/home/facades/projects/buildings_segmentation_detection/code/data/train'
  segment_image_path: '/home/facades/projects/buildings_segmentation_detection/code/data/totest'
  id_segments: '20200224'
  results_path: '/home/facades/projects/buildings_segmentation_detection/output/RAYMOND/FLOOR'
  WEIGHTS : '/home/facades/projects/buildings_segmentation_detection/output/week14/active-learning-loop-1/model_final.pth' #For Train+inf in one go use the output dir where the weights will located after training


DETECTRON:
  CATALOG :
    - "totest"
    - "train"
    - "val"
    - "basel_annotation1"
    - "active_learning_loop_1"
    - "AL1_VALFINAL"
  DATASETS :
    - "building_totest"
    - "building_train"
    - "building_val"
    - "building_basel_annotation1"
    - "building_active_learning_loop_1"
    - "building_AL1_VALFINAL"
  EPOCH : 40
  TOTAL_NUM_IMAGES : 187
  MODEL_ZOO : "COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x.yaml"
  NUM_WORKERS : 2
  WEIGHTS : "COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x.yaml"
  IMS_PER_BATCH : 2
  BASE_LR : 0.00025  # pick a good LR
  MAX_ITER : 'int(EPOCH*TOTAL_NUM_IMAGES/cfg.SOLVER.IMS_PER_BATCH-1)' #INFORMATIVE ONLY # 300 iterations seems good enough for this toy dataset; you will need to train longer for a practical dataset
  STEPS :      # do not decay learning rate
  BATCH_SIZE_PER_IMAGE : 256   # faster, and good enough for this toy dataset (default: 512)
  NUM_CLASSES : 2  # 2 class ("opening","masonry","m6","rcw").  (see https://detectron2.readthedocs.io/tutorials/datasets.html#update-the-config-for-new-datasets)
  # NOTE: this config means the number of classes, but a few popular unofficial tutorials incorrect uses num_classes+1 here.
 

EXP_NAME : 'building_basel_annotation1' 